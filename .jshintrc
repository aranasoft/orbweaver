{
    // JSHint Default Configuration File (as on JSHint website)
    // See http://jshint.com/docs/ for more details

    "esversion"     : 5,          // {int} ECMAScript version to which the code must adhere

    // Enforcing
    "bitwise"       : true,       // true: Prohibit bitwise operators (&, |, ^, etc.)
    "curly"         : true,       // true: Require {} for every new block or scope
    "eqeqeq"        : false,      // true: Require triple equals (===) for comparison
    "forin"         : true,       // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze"        : true,       // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "funcscope"     : false,      // true: Tolerate defining variables inside control statements
    "iterator"      : false,      // true: Tolerate using the `__iterator__` property
    "latedef"       : true,       // true: Require variables/functions to be defined before being used
    "noarg"         : true,       // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "nocomma"       : true,       // true: Prohibit use of the comma operator
    "nonbsp"        : true,       // true: Prohibit "non-breaking whitespace" characters.
    "nonew"         : false,      // true: Prohibit use of constructors for side-effects (without assignment)
    "notypeof"      : false,      // true: Tolerate invalid typeof operator values
    "shadow"        : false,      // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "singleGroups"  : false,      // true: Prohibits the use of the grouping operator when it is not strictly required
    "strict"        : "global",   // true: Requires all functions run in ES5 Strict Mode
    "undef"         : true,       // true: Require all non-global variables to be declared (prevents global leaks)
    "unused"        : true,       // true: Require all defined variables be used
    "varstmt"       : false,      // true: Prohibits the use of VariableStatements

    "maxcomplexity" : false,      // {int} Max cyclomatic complexity per function
    "maxdepth"      : false,      // {int} Max depth of nested blocks (within functions)
    "maxerr"        : 50,         // {int} Maximum error before stopping
    "maxlen"        : false,      // {int} Max number of characters per line
    "maxparams"     : false,      // {int} Max number of formal params allowed per function
    "maxstatements" : false,      // {int} Max number statements per function

    // Relaxing
    "asi"           : false,      // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "boss"          : false,      // true: Tolerate assignments where comparisons would be expected
    "debug"         : false,      // true: Allow debugger statements e.g. browser breakpoints.
    "eqnull"        : false,      // true: Tolerate use of `== null`
    "evil"          : false,      // true: Tolerate use of `eval` and `new Function()`
    "expr"          : false,      // true: Tolerate `ExpressionStatement` as Programs
    "lastsemic"     : false,      // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "loopfunc"      : false,      // true: Tolerate functions being defined in loops
    "moz"           : false,      // true: Allow Mozilla specific syntax (extends and overrides esnext features)
                                  // (ex: `for each`, multiple try/catch, function expressionâ€¦)
    "noyield"       : false,      // true: Tolerate generator functions with no yield statement in them.
    "plusplus"      : false,      // true: Prohibit use of `++` & `--`
    "proto"         : false,      // true: Tolerate using the `__proto__` property
    "scripturl"     : false,      // true: Tolerate script-targeted URLs
    "supernew"      : false,      // true: Tolerate `new function () { ... };` and `new Object;`
    "validthis"     : false,      // true: Tolerate using this in a non-constructor function
    "withstmt"      : false,      // true: Tolerate using the with statement.

    // Environments
    "browser"       : false,      // Web Browser (window, document, etc)
    "browserify"    : false,      // Browserify (node.js code in the browser)
    "couch"         : false,      // CouchDB
    "devel"         : false,      // Development/debugging (alert, confirm, etc)
    "dojo"          : false,      // Dojo Toolkit
    "jasmine"       : false,      // Jasmine
    "jquery"        : false,      // jQuery
    "mocha"         : false,      // Mocha
    "mootools"      : false,      // MooTools
    "node"          : false,      // Node.js
    "nonstandard"   : false,      // Widely adopted globals (escape, unescape, etc)
    "phantom"       : false,      // PhantomJS
    "prototypejs"   : false,      // Prototype and Scriptaculous
    "qunit"         : false,      // QUnit
    "rhino"         : false,      // Rhino
    "shelljs"       : false,      // ShellJS
    "typed"         : false,      // Typed Array Constructors
    "worker"        : false,      // Web Workers
    "wsh"           : false,      // Windows Scripting Host
    "yui"           : false,      // Yahoo User Interface

    // Custom Globals
    "predef"        : ["angular"],
    "globals"       : {"window": true}          // additional predefined global variables
}

